// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rover.Model;

import project.AbstractRobot;
import project.Point;
import rover.Controller.IAccessManager;
import rover.Controller.IOperatorFaultView;
import rover.Controller.IStrategy;
import rover.Model.AbstractArea;
import rover.Model.IRoverLocator;
import rover.Model.IRoverManager;
import rover.Model.IVisitableArea;
import rover.Model.Mission;

/************************************************************/
/**
 * 
 */
public class Rover extends AbstractRobotSimulator implements IRoverManager, IRoverLocator {
	/**
	 * 
	 */
	private Point destination;
	/**
	 * 
	 */
	private Mission mission;
	/**
	 * 
	 */
	private boolean paused;
	/**
	 * 
	 */
	private boolean sleeping;
	/**
	 * 
	 */
	private IStrategy strategy;
	/**
	 * 
	 */
	private IAccessManager accessManager;
	/**
	 * 
	 */
	private AbstractArea[] listAreas;

	/**
	 * 
	 * @param position 
	 * @param name 
	 * @param accessManager 
	 * @param listAreas 
	 */
	public void Rover(Point position, String name, IAccessManager accessManager, IVisitableArea[] listAreas) {
	}

	/**
	 * 
	 * @return 
	 */
	public Point getDestination() {
	}

	/**
	 * 
	 * @return 
	 */
	public Mission getMission() {
	}

	/**
	 * 
	 * @return 
	 */
	public boolean isPaused() {
	}

	/**
	 * 
	 * @return 
	 */
	public boolean isSleeping() {
	}

	/**
	 * 
	 * @return 
	 */
	public IStrategy getStrategy() {
	}

	/**
	 * 
	 * @return 
	 */
	public IAccessManager getAccessManager() {
	}

	/**
	 * 
	 * @param destination 
	 * @return 
	 */
	public void setDestination(Point destination) {
	}

	/**
	 * 
	 * @return 
	 */
	public void goToNextPoint() {
	}

	/**
	 * 
	 * @param roverName 
	 * @return 
	 */
	public Point getLocation(String roverName) {
	}

	/**
	 * 
	 * @param mission 
	 * @return 
	 * @param strategy 
	 */
	public boolean provideMission(Mission mission, IStrategy strategy) {
	}

	/**
	 * 
	 * @return 
	 */
	public boolean pauseRover() {
	}

	/**
	 * 
	 * @return 
	 */
	public boolean continueRover() {
	}

	/**
	 * 
	 * @param strategy 
	 * @return 
	 */
	public boolean changeStrategy(IStrategy strategy) {
	}

	/**
	 * 
	 * @param roverName 
	 * @return 
	 */
	public Point getLocation(undefined roverName) {
	}

	/**
	 * 
	 * @return 
	 */
	public IVisitableArea[] isInArea() {
	}

	/**
	 * 
	 * @return 
	 */
	public void routine() {
	}

	/**
	 * 
	 * @return 
	 */
	public IVisitableArea getAreas() {
	}

	/**
	 * 
	 * @return 
	 */
	public boolean removeMission() {
		mission = null;
		return true;
	}
};
