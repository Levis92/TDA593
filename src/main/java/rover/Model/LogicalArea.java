// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rover.Model;

import project.Point;
import rover.Controller.IVisitorProcedure;
import rover.Model.AbstractArea;

/************************************************************/
/**
 * 
 */
public class LogicalArea extends AbstractArea {
	//TODO change constructor call to super
	/**
	 * 
	 * @param position 
	 * @param width 
	 * @param height 
	 * @param areaType 
	 */
	public void logicalArea(Point position, double width, double height, String areaType) {
		abstractArea(position,width,height,areaType);
	}

	//TODO implement contains, not sure if it's needed
	/**
	 * 
	 * @param point 
	 * @return 
	 */
	public boolean contains(Point point) {
		return true;
	}

	/**
	 * 
	 * @return 
	 */
	public String getAreaType() {
		return super.getAreaType();
	}

	@Override
	public boolean isInArea(Point point) {
		boolean isInArea;
		Point position = super.getPosition();
		double areaWidth =super.getWidth();
		double areaHeight = super.getHeight();
		if(position.getX() < point.getX() && position.getZ() < point.getZ() &&
				position.getX() + areaWidth > point.getX() && position.getZ() + areaHeight > point.getZ()) {
			isInArea = false;
		}else {
			isInArea = true;
		}
		return isInArea;
	}

	@Override
	public Point getPosition() {
		return super.getPosition();
	}

	@Override
	public double getWidth() {
		return super.getWidth();
	}

	@Override
	public double getHeight() {
		return super.getHeight();
	}

	@Override
	public void accept(IVisitorProcedure procedure, IRoverLocator rover) {
		procedure.visit(this, rover);
		
	}
};
