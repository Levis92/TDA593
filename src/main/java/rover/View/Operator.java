// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rover.View;

import java.util.Iterator;
import java.util.List;

import Simulator.AccessController;
import project.Point;
import rover.Controller.IMissionManager;
import rover.Controller.IStrategy;
import rover.Controller.StrategyFactory;
import rover.Model.Rover;
import rover.View.IOperatorCreateMissionView;
import rover.View.IOperatorEnvironmentView;
import rover.View.IOperatorFaultView;
import rover.View.IOperatorRewardPointsView;
import rover.View.IOperatorMissionManagerView;

/************************************************************/
/**
 * 
 */
public class Operator implements rover.Controller.INotifyOperator {
	/**
	 * 
	 */
	private IOperatorRewardPointsView iOperatorRewardPointsView;
	/**
	 * 
	 */
	private IOperatorEnvironmentView iOperatorEnvironmentView;
	/**
	 * 
	 */
	private IOperatorFaultView iOperatorFaultView;
	/**
	 * 
	 */
	private StrategyFactory strategyFactory;
	/**
	 * 
	 */

	private IOperatorMissionManagerView iOperatorMissionManagerView;
	
	
	/**
	 * @param type  
	 * @param missionManager  
	 */
	public Operator(String type, IMissionManager missionManager) {
		if (type.equals("technical")) {
			iOperatorMissionManagerView = new TOperatorMissionManagerView(missionManager);
			iOperatorEnvironmentView = new TOperatorEnvironmentView();
			iOperatorFaultView = new IOperatorFaultView();
			iOperatorRewardPointsView = new TOperatorRewardPointsView();
			strategyFactory = new StrategyFactory();
			
		} else if (type.equals("non-technical")) {
			iOperatorMissionManagerView = null;
			iOperatorEnvironmentView = new NTOperatorEnvironmentView();
			iOperatorFaultView = new IOperatorFaultView();
			iOperatorRewardPointsView = new NTOperatorRewardPointsView();
		}
		
		List<Rover> rovers =  missionManager.getRovers();
		for (Iterator<Rover> iter = rovers.iterator(); iter.hasNext(); ) {
			Rover rover = iter.next();
			rover.addOperator(this);
		}
	}
	

	/**
	 * 
	 * @return 
	 */
	public void updateLocation() {
	}


	/**
	 * 
	 * @return 
	 */
	public void updateMissionProgress() {
	}


	/**
	 * 
	 * @param rewardPoints 
	 * @return 
	 */
	public void notifyRewardPoints(int[] rewardPoints) {
	}


	/**
	 * 
	 * @param points 
	 * @param rover 
	 * @param missionManager 
	 */


	@Override
	public void notifyFault(String status) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void notifyLocation(String location) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void notifyMissionProgress(String progress) {
		// TODO Auto-generated method stub
		
	}
	public IOperatorMissionManagerView getMissionManagerView() {
		return iOperatorMissionManagerView;
	}


};
