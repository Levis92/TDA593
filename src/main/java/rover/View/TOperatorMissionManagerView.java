// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rover.View;

import java.util.List;
import rover.Controller.IMissionManager;
import rover.Model.Rover;
import rover.View.IOperatorMissionManagerView;
import rover.Controller.IStrategy;
import rover.Controller.StrategyFactory;
import project.Point;

/************************************************************/
/**
 * 
 */
public class TOperatorMissionManagerView implements IOperatorMissionManagerView {

	IMissionManager missionManager;

	StrategyFactory strategyFactory;
	
	public TOperatorMissionManagerView(IMissionManager missionManager) {
		this.missionManager = missionManager;
		strategyFactory = new StrategyFactory();
	}
	
	/**
	 * 
	 * @param rover 
	 * @return 
	 */
	public boolean removeMission(Rover rover) {
		return true;
	}

	/**
	 * 
	 * @return 
	 */
	public boolean removeAllMissions() {
		return true;
	}

	/**
	 * 
	 * @return 
	 * @param rover 
	 */
	public boolean pauseMission(Rover rover) {
		return true;
	}

	/**
	 * 
	 * @param rover 
	 * @return 
	 */
	public boolean continueMission(Rover rover) {
		return true;
	}

	/**
	 * 
	 * @return 
	 */
	public boolean pauseAllMissions() {
		return true;
	}

	/**
	 * 
	 * @return 
	 */
	public boolean continueAllMissions() {
		return true;
	}

	/**
	 * 
	 * @param rover 
	 */
	public void changeStrategy(Rover rover) {
	}

	/**
	 * 
	 * @param rover 
	 * @param strategy 
	 */
	public void changeStrategy(Rover rover, Integer strategy) {
	}

	@Override
	public boolean createMission(List<Point> points, Rover rover, Integer strategy) {
		IStrategy iStrategy = strategyFactory.createStrategy(strategy);
		return missionManager.createMission(points, rover, iStrategy);
	}

};
